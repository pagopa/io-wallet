openapi: 3.0.3
info:
  title: IO Wallet - User API
  version: 1.0.0
servers:
  - url: https://io-p-itn-wallet-user-func-01.azurewebsites.net/api/v1/wallet
paths:
  /nonce:
    get:
      operationId: getNonce
      summary: Returns a randomly generated nonce
      security:
        - FunctionsKey: []
      responses:
        "200":
          description: Nonce successfully generated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NonceDetailView"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"

  /wallet-instances:
    post:
      operationId: createWalletInstance
      summary: Create a wallet instance
      security:
        - FunctionsKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWalletInstanceBody"
      responses:
        "204":
          description: Wallet instance successfully created
        "409":
          $ref: "#/components/responses/Conflict"
        "422":
          $ref: "#/components/responses/UnprocessableContent"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"

  /token:
    description: This is a token endpoint (as defined in RFC 7523 section 4)
    post:
      operationId: createWalletAttestation
      summary: Create and return a Wallet Attestation
      security:
        - FunctionsKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateWalletAttestationBody"
      responses:
        "200":
          description: Wallet Attestation generated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WalletAttestationView"
        "403":
          description: The wallet instance was revoked
          $ref: "#/components/responses/Forbidden"
        "404":
          description: The wallet instance was not found
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
        "422":
          $ref: "#/components/responses/UnprocessableContent"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"

  /wallet-instances/current/status:
    get:
      summary: Retrieve the current Wallet Instance status
      operationId: getCurrentWalletInstanceStatus
      security:
        - FunctionsKey: []
          BearerAuth: []
      responses:
        "200":
          description: Wallet Instance status successfully retrieved
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WalletData"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"
    put:
      summary: Revoke current Wallet Instance
      operationId: setCurrentWalletInstanceStatus
      security:
        - FunctionsKey: []
      description: |
        Revoke the current Wallet Instance.
        If the Wallet Instance is already revoked, the operation will succeed.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetWalletInstanceStatusWithFiscalCodeData"
      responses:
        "204":
          description: Wallet Instance status successfully set
        "422":
          $ref: "#/components/responses/UnprocessableContent"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"

  /wallet-instances/{id}/status:
    put:
      summary: Revoke a Wallet Instance
      operationId: setWalletInstanceStatus
      security:
        - FunctionsKey: []
          BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      description: |
        Revoke the Wallet Instance associated with the authenticated user.
        If the Wallet Instance is already revoked, the operation will succeed.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SetWalletInstanceStatusData"
      responses:
        "204":
          description: Wallet Instance status successfully set
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "422":
          $ref: "#/components/responses/UnprocessableContent"
        "500":
          $ref: "#/components/responses/InternalServerError"
        "503":
          $ref: "#/components/responses/ServiceUnavailable"

  /health:
    get:
      operationId: healthCheck
      summary: Used to check if the function is healthy
      responses:
        "200":
          description: The function is health
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "500":
          $ref: "#/components/responses/InternalServerError"

components:
  securitySchemes:
    FunctionsKey:
      type: apiKey
      name: X-Functions-Key
      in: header
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  responses:
    Forbidden:
      description: The server understands the request but refuses to authorize it
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemJson"

    BadRequest:
      description: Validation error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemJson"

    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemJson"

    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemJson"

    Conflict:
      description: There has been a conflict
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemJson"

    UnprocessableContent:
      description: Unprocessable Content
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemJson"

    InternalServerError:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemJson"

    ServiceUnavailable:
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProblemJson"

  schemas:
    SetWalletInstanceStatusData:
      type: string
      enum: ["REVOKED"]

    SetWalletInstanceStatusWithFiscalCodeData:
      type: object
      properties:
        status:
          type: string
          enum: ["REVOKED"]
        fiscal_code:
          $ref: "#/components/schemas/FiscalCode"
      required:
        - status
        - fiscal_code

    WalletData:
      description: |-
        Describes the status of the wallet.
      type: object
      properties:
        id:
          type: string
        is_revoked:
          type: boolean
      required:
        - id
        - is_revoked

    NonceDetailView:
      type: object
      properties:
        nonce:
          type: string
      required:
        - nonce

    WalletAttestationView:
      type: object
      properties:
        wallet_attestation:
          type: string
          minLength: 1
          format: binary
      required:
        - wallet_attestation

    CreateWalletInstanceBody:
      type: object
      properties:
        challenge:
          type: string
          minLength: 1
          format: binary
        key_attestation:
          type: string
          minLength: 1
          format: binary
        hardware_key_tag:
          type: string
          minLength: 1
        fiscal_code:
          $ref: "#/components/schemas/FiscalCode"
      required:
        - challenge
        - key_attestation
        - hardware_key_tag
        - fiscal_code

    CreateWalletAttestationBody:
      type: object
      properties:
        grant_type:
          type: string
          enum: ["urn:ietf:params:oauth:grant-type:jwt-bearer"]
        assertion:
          type: string
          minLength: 1
          format: binary
          example: eyJhbGciOiJFUzI1NiIsImtpZCI6InZiZVhKa3NNNDV4cGh0QU5uQ2lHNm1DeXVVNGpmR056b3BHdUt2b2dnOWMiLCJ0eXAiOiJ3YXIrand0In0.eyJpc3MiOiJodHRwczovL3dhbGxldC1wcm92aWRlci5leGFtcGxlLm9yZy9pbnN0YW5jZS92YmVYSmtzTTQ1eHBodEFObkNpRzZtQ3l1VTRqZkdOem9wR3VLdm9nZzljIiwic3ViIjoiaHR0cHM6Ly93YWxsZXQtcHJvdmlkZXIuZXhhbXBsZS5vcmcvIiwiY2hhbGxlbmdlIjoiNmVjNjkzMjQtNjBhOC00ZTViLWE2OTctYTc2NmQ4NTc5MGVhIiwiaGFyZHdhcmVfc2lnbmF0dXJlIjoiS29aSWh2Y05BUWNDb0lBd2dBSUIuLi5yZWRhY3RlZCIsImludGVncml0eV9hc3NlcnRpb24iOiJvMk5tYlhSdllYQndiR1V0WVhCd1lYLi4ucmVkYWN0ZWQiLCJoYXJkd2FyZV9rZXlfdGFnIjoiV1FoeUR5bUZLc1A5NWlGcXB6ZEVEV1c0bDdhVm5hMkZuNEpDZVdIWXRiVT0iLCJjbmYiOnsiandrIjp7ImNydiI6IlAtMjU2Iiwia3R5IjoiRUMiLCJ4IjoiNEhOcHRJLXhyMnBqeVJKS0dNbno0V21kblFEX3VKU3E0Ujk1Tmo5OGI0NCIsInkiOiJMSVpuU0IzOXZGSmhZZ1MzazdqWEU0cjMtQ29HRlF3WnRQQklScXBObHJnIiwia2lkIjoidmJlWEprc000NXhwaHRBTm5DaUc2bUN5dVU0amZHTnpvcEd1S3ZvZ2c5YyJ9fSwidnBfZm9ybWF0c19zdXBwb3J0ZWQiOnsiand0X3ZjX2pzb24iOnsiYWxnX3ZhbHVlc19zdXBwb3J0ZWQiOlsiRVMyNTZLIiwiRVMzODQiXX0sImp3dF92cF9qc29uIjp7ImFsZ192YWx1ZXNfc3VwcG9ydGVkIjpbIkVTMjU2SyIsIkVkRFNBIl19fSwiaWF0IjoxNjg2NjQ1MTE1LCJleHAiOjE2ODY2NTIzMTV9.F32bisVth4eDdGxDjB9ByENT-oZLtSY_89uwTSePo2GMEKaeEedpXZE_9mrX7t0_Fmc5m6LNVvIIBqotqsYJYQ
        fiscal_code:
          $ref: "#/components/schemas/FiscalCode"
      required:
        - grant_type
        - assertion
        - fiscal_code

    ProblemJson:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type. When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: about:blank
          example: https://example.com/problem/constraint-violation
        title:
          type: string
          description: >-
            A short, summary of the problem type. Written in english and
            readable for engineers (usually not suited for non technical stakeholders and not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: >-
            The HTTP status code generated by the origin server for this
            occurrence of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 200
        detail:
          type: string
          description: |-
            A human readable explanation specific to this occurrence of the
            problem.
          example: There was an error processing the request
        instance:
          type: string
          format: uri
          description: >-
            An absolute URI that identifies the specific occurrence of the
            problem. It may or may not yield further information if
            dereferenced.

    FiscalCode:
      type: string
      description: User's fiscal code.
      format: FiscalCode
      x-import: "@pagopa/ts-commons/lib/strings"
      example: SPNDNL80R13C555X
