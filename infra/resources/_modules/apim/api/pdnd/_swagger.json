{
  "openapi": "3.0.3",
  "info": {
    "title": "IO Wallet API",
    "version": "1.0.0"
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "paths": {
    "/status": {
      "get": {
        "operationId": "healthCheck",
        "summary": "Used to check if the function is healthy",
        "responses": {
          "200": {
            "description": "The function is health",
            "content": {
              "application/problem+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": ["about:blank"]
                    },
                    "title": {
                      "type": "string",
                      "enum": ["OK"]
                    },
                    "status": {
                      "type": "integer",
                      "format": "int32",
                      "enum": [200]
                    },
                    "detail": {
                      "type": "string",
                      "enum": ["The service is healthy"]
                    },
                    "instance": {
                      "type": "string",
                      "enum": ["/status"]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/problem+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            }
          }
        }
      }
    },
    "/wallet-instances/{id}/status": {
      "put": {
        "summary": "Revoke a Wallet Instance",
        "operationId": "setWalletInstanceStatus",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Revoke the Wallet Instance. \nIf the Wallet Instance is already revoked, the operation succeed.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SetWalletInstanceStatusData"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Wallet Instance status successfully set"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "422": {
            "$ref": "#/components/responses/UnprocessableContent"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Validation error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemJson"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemJson"
            }
          }
        }
      },
      "NotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemJson"
            }
          }
        }
      },
      "UnprocessableContent": {
        "description": "Unprocessable Content",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemJson"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ProblemJson"
            }
          }
        }
      },
      "ServiceUnavailable": {
        "description": "Service Unavailable",
        "content": {
          "application/json": {
            "schema": { "$ref": "#/components/schemas/ProblemJson" }
          }
        }
      }
    },
    "schemas": {
      "SetWalletInstanceStatusData": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["REVOKED"]
          },
          "fiscal_code": {
            "$ref": "#/components/schemas/FiscalCode"
          }
        },
        "required": ["status", "fiscal_code"]
      },
      "FiscalCode": {
        "type": "string",
        "description": "User's fiscal code.",
        "format": "FiscalCode",
        "x-import": "@pagopa/ts-commons/lib/strings",
        "example": "SPNDNL80R13C555X"
      },
      "ProblemJson": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "format": "uri",
            "description": "An absolute URI that identifies the problem type. When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).",
            "default": "about:blank",
            "example": "https://example.com/problem/constraint-violation"
          },
          "title": {
            "type": "string",
            "description": "A short, summary of the problem type. Written in english and readable for engineers (usually not suited for non technical stakeholders and not localized); example: Service Unavailable"
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
            "minimum": 100,
            "maximum": 600,
            "exclusiveMaximum": true,
            "example": 500
          },
          "detail": {
            "type": "string",
            "description": "A human readable explanation specific to this occurrence of the\nproblem.",
            "example": "There was an error processing the request"
          },
          "instance": {
            "type": "string",
            "format": "uri",
            "description": "An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced."
          }
        }
      }
    }
  }
}
